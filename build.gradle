plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

archivesBaseName = 'backend'
group = 'com.EntertainmentViet'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = "1.5.2.Final"
	lombokVersion = "1.18.22"
	lombokMapstructBindingVersion = "0.2.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.hibernate:hibernate-spatial'
//	implementation 'org.flywaydb:flyway-core'
	implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean